SET SAFETY OFF
CLOSE PRIMARY ALL
DELETE ALL OK

v_utils_path = "C:\Users\francis.boame\Documents\Arbutus\Projects\CBG\BANK_RECON\BANK_RECON_DATA\zUTILS"
v_folder_path = "C:\Users\francis.boame\Documents\Arbutus\Projects\CBG\BANK_RECON\BANK_RECON_DATA\STALE"
v_processing_path = "C:\Users\francis.boame\Documents\Arbutus\Projects\CBG\BANK_RECON\BANK_RECON_DATA\STALE\zProcessing"
v_results_path = "C:\Users\francis.boame\Documents\Arbutus\Projects\CBG\BANK_RECON\BANK_RECON_RESULTS\STALE"


DELETE "%v_processing_path%\branch_staleappend.txt" OK
DELETE "%v_processing_path%\stalerecon_branch_append.txt" OK
DELETE "%v_processing_path%\stalerecon_branch_append_final.txt" OK
DELETE "%v_processing_path%\prev_stalerecon.txt" OK
DELETE "%v_processing_path%\STALE_TRANS_EXTRACT.txt" OK
DELETE "%v_processing_path%\T24_STALE_ORDER_TRANS_EXTRACT_APPEND.txt" OK


DELETE FOLDER /TEMP/BANK/STALE OK
DELETE FOLDER /SYS/BANK OK


DO zGET_DATE
DO zIMPORT_BANK_RECON_ACC_DBS2

SET FOLDER KEEP /TEMP/BANK/STALE


******************************************************************
* EXTRACT CBG ACC BALANCES
******************************************************************
SET SAFETY OFF

OPEN T_CBG_BALS_IMPORT

EXTRACT FIELDS ALL TO T_SO_ACC_BALS OPEN IF FIND("GHS10405000", Account) AND (BALANCE_DATE <> `19000101`)


SORT ON Account BALANCE_DATE TO CBG_ACC_BALS_SORTED open

DEFINE FIELDS NEW_DATE COMPUTED

RECOFFSET(BALANCE_DATE,1) IF RECOFFSET(Account ,1) = Account
EDATE

DEFINE FIELDS DAYS COMPUTED AGE(BALANCE_DATE,NEW_DATE) + 1

GROUP
  v_counter = 1
  v_date = BALANCE_DATE

  LOOP WHILE v_counter <= DAYS
    EXTRACT fields all  v_counter v_date to CBG_ACC_BALS
    v_date = v_date + 1
    v_counter = v_counter + 1
  END
END


******************************************************************
* GET BRANCHES FOR ALL ACCOUNTS
******************************************************************
OPEN CBG_ACC_BALS
OPEN STALE_PO_ACNTS SECONDARY

JOIN PRIMARY PKEY ACCOUNT FIELDS ALL SKEY ACC__NO WITH ALL TO "T24_SO_ACC_BALS_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY

SUMMARIZE ON Account AS 'Account' FIELDS ACC__NO SUMMTYPE FIRST AS 'ACC_NO' Account SUMMTYPE FIRST AS 'Account' BALANCE_DATE SUMMTYPE FIRST AS 'BALANCE_DATE' BK_BALANCE SUMMTYPE LAST AS 'BK_BALANCE' ACC__NAME SUMMTYPE FIRST AS 'Branch' DAYS SUMMTYPE SUM AS 'SUM_DAYS' LCY_FCY SUMMTYPE FIRST AS 'LCY_FCY' NEW_DATE SUMMTYPE FIRST AS 'NEW_DATE' v_counter SUMMTYPE SUM AS 'SUM_v_counter' v_date SUMMTYPE FIRST AS 'v_date' PRESORT TO "STALE_PO_ACC_BAL_SUMM" OPEN IF V_DATE = EDATE AND NOT ISBLANK(ACC__NO)

EXTRACT FIELDS ALL TO T24_SO_ACC_BALS_EXTRACT IF NOT ISBLANK(ACC_NO)



*******************************************
* IMPORT BANK DB
*******************************************
SET FOLDER KEEP /SYS/BANK/DB

OPEN CBG_T24_TRANS

EXTRACT FIELDS ALL TO T_SO_T24_TRANS_EXTRACT IF FIND("GHS10405000", ACCOUNT_NUMBER) OPEN

DEFINE FIELD PO_NO_1 COMPUTED

CHEQUE_NUMBER IF NOT ISBLANK(CHEQUE_NUMBER)
LFILL(ABS(VALUE(NORMALIZE(NARRATIVE_1), 0)), "0", 6) IF (FIND("99", FORMAT( NARRATIVE_1)) AND NOT FIND("BR", NARRATIVE_1) ) AND NOT FIND("DD", NARRATIVE_1) AND NOT FIND("99.99", FORMAT(NARRATIVE_1)) AND NOT FIND("9.9", FORMAT(NARRATIVE_2)) AND NOT FIND("PREMIUM", NARRATIVE_1) AND NOT FIND("REF FT", NARRATIVE_1)
LFILL(ABS(VALUE(NORMALIZE(NARRATIVE_2), 0)), "0", 6) IF (FIND("99", FORMAT( NARRATIVE_2)) AND NOT FIND("BR", NARRATIVE_2) ) AND NOT FIND("DD", NARRATIVE_2) AND NOT FIND("99.99", FORMAT(NARRATIVE_2)) AND NOT FIND("9.9", FORMAT(NARRATIVE_2)) AND NOT FIND("PREMIUM", NARRATIVE_2) AND NOT FIND("REF FT", NARRATIVE_2)
LFILL(ABS(VALUE(NORMALIZE(NARRATIVE_3), 0)), "0", 6) IF (FIND("99", FORMAT( NARRATIVE_3)) AND NOT FIND("BR", NARRATIVE_3) ) AND NOT FIND("DD", NARRATIVE_3) AND NOT FIND("99.99", FORMAT(NARRATIVE_3)) AND NOT FIND("9.9", FORMAT(NARRATIVE_3)) AND NOT FIND("PREMIUM", NARRATIVE_3) AND NOT FIND("REF FT", NARRATIVE_3)
''

DEFINE FIELD PO_NO_2 COMPUTED

SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_1, 4) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_1, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "CHQ NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_1, 6) = 'CHQ NO '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "CHQ", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_1, 4) = 'CHQ '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "STALE PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("STALE PO NO", LEFT(NARRATIVE_1, 12))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO NO", NARRATIVE_1) AND FIND("999", FORMAT(NARRATIVE_1))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO","DD", NARRATIVE_1) AND FIND("999", FORMAT(NARRATIVE_1))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_2, 4) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_2, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "CHQ NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_2, 6) = 'CHQ NO '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "CHQ", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_2, 4) = 'CHQ '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "STALE PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("STALE PO NO", LEFT(NARRATIVE_2, 12))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO NO", NARRATIVE_2) AND FIND("999", FORMAT(NARRATIVE_2))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO","DD", NARRATIVE_2) AND FIND("999", FORMAT(NARRATIVE_2))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_3, 4) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_3, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "CHQ NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_3, 6) = 'CHQ NO '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "CHQ", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND LEFT(NARRATIVE_3, 4) = 'CHQ '
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "STALE PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("STALE PO NO", LEFT(NARRATIVE_3, 12))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO NO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO NO", NARRATIVE_3) AND FIND("999", FORMAT(NARRATIVE_3))
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO", 2)), " ", 1) IF ISBLANK(PO_NO_1) AND FIND("PO","DD", NARRATIVE_3) AND FIND("999", FORMAT(NARRATIVE_3))
''

DEFINE FIELD PO_NO_3 COMPUTED

SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "NUMBER", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND FIND("P O NUMBER", NARRATIVE_1)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "NO", 2)), " ", 1) IF FIND("CHARGE","DD", NARRATIVE_1)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "NO", 2)), " ", 1) IF FIND("NO DD RVSD", NARRATIVE_1)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "NO", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND MATCH(NARRATIVE_1, "RVSL OF P O NO", "RVSL OF PO NO")
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "NUMBER", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND FIND("P O NUMBER", NARRATIVE_2)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "NO", 2)), " ", 1) IF FIND("CHARGE","DD", NARRATIVE_2)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "NO", 2)), " ", 1) IF FIND("NO DD RVSD", NARRATIVE_2)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "NO", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND MATCH(NARRATIVE_2, "RVSL OF P O NO", "RVSL OF PO NO")
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "NUMBER", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND FIND("P O NUMBER", NARRATIVE_3)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "NO", 2)), " ", 1) IF FIND("CHARGE","DD", NARRATIVE_3)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "NO", 2)), " ", 1) IF FIND("NO DD RVSD", NARRATIVE_3)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "NO", 2)), " ", 1) IF ISBLANK(PO_NO_2) AND ISBLANK(PO_NO_1)  AND MATCH(NARRATIVE_3, "RVSL OF P O NO", "RVSL OF PO NO")
''

DEFINE FIELD PO_NO_4 COMPUTED

SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_1, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "PO NO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_1, 6) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_1), "CHQ", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("CHQ 0", NARRATIVE_1)
LFILL(ABS(VALUE(NORMALIZE(REPLACE(NARRATIVE_1, "PO0", "PO 0")), 0)), "0", 6) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("PO0", NARRATIVE_1)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_2, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "PO NO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_2, 6) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_2), "CHQ", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("CHQ 0", NARRATIVE_2)
LFILL(ABS(VALUE(NORMALIZE(REPLACE(NARRATIVE_2, "PO0", "PO 0")), 0)), "0", 6) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("PO0", NARRATIVE_2)
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_3, 4) = 'PO 0'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "PO NO", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND LEFT(NARRATIVE_3, 6) = 'PO NO'
SPLIT(ALLTRIM(SPLIT(NORMALIZE(NARRATIVE_3), "CHQ", 2)), " ", 1) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("CHQ 0", NARRATIVE_3)
LFILL(ABS(VALUE(NORMALIZE(REPLACE(NARRATIVE_3, "PO0", "PO 0")), 0)), "0", 6) IF FIND("X", FORMAT(PO_NO_1)) AND FIND("PO0", NARRATIVE_3)
''

DEFINE FIELD PO_NO_5 COMPUTED

PO_NO_1 IF NOT FIND("X", FORMAT(PO_NO_1)) AND NOT ISBLANK(PO_NO_1)
PO_NO_2 IF NOT FIND("X", FORMAT(PO_NO_2)) AND NOT ISBLANK(PO_NO_2)
PO_NO_3 IF NOT FIND("X", FORMAT(PO_NO_3)) AND NOT ISBLANK(PO_NO_3)
PO_NO_4 IF NOT FIND("X", FORMAT(PO_NO_4)) AND NOT ISBLANK(PO_NO_4)
''

DEFINE FIELD PO_NO_6 COMPUTED

LFILL(ABS(VALUE(NORMALIZE(CHEQUE_NUMBER), 0)), "0", 6) IF (NOT ISBLANK(CHEQUE_NUMBER)AND ISBLANK(PO_NO_5) )
''

DEFINE FIELD PO_NO COMPUTED

LFILL(ALLTRIM(PO_NO_5), "0", 6) IF NOT ISBLANK(PO_NO_5)
PO_NO_6 IF (NOT ISBLANK(CHEQUE_NUMBER)AND ISBLANK(PO_NO_5) )
"XXXXXX"

DEFINE FIELD AGEING COMPUTED AGE(BOOKING_DATE,EDATE)

EXTRACT FIELDS ALL TO T_T24_TRANS



*******************************************
* EXTRACT STALE PO ACCOUNTS TRANSACTIONS
*******************************************
SET SAFETY OFF

OPEN T_T24_TRANS
OPEN STALE_PO_ACNTS SECONDARY

JOIN PKEY ACCOUNT_NUMBER FIELDS ALL SKEY ACC__NO WITH ALL TO "T24_STALE_PO_ACC_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY

DEFINE FIELD ARBUTUS_STALE_PO_ACNT_BR_CODE COMPUTED RIGHT(RJUSTIFY(ALLTRIM(ACCOUNT_NUMBER)), 3)

EXTRACT FIELDS ALL TO T24_STALE_PO_ACC_JOIN_EXTRACT OPEN IF BETWEEN(DATE_TIME, sdatetime, edatetime)

SUMMARIZE ON TRANS_REFERENCE ACC__NO AS 'ACC_NO' FIELDS ALL ACC__NAME AS 'BRANCH' PRESORT TO "T24_STALE_PO_ACC_JOIN_EXTRACT_SUMM" OPEN

EXTRACT FIELDS ALL TO T24_STALE_PO_TRANS OPEN IF NOT ((FIND("UNRECONCILED", NARRATIVE_1, NARRATIVE_2, NARRATIVE_3)) OR (FIND("MIGRAT", NARRATIVE_1, NARRATIVE_2, NARRATIVE_3)) OR FIND("moved", NARRATIVE_1, NARRATIVE_2, NARRATIVE_3))



*******************************************
* EXTRACT ACTIVE PO ACCOUNTS TRANSACTIONS
*******************************************
OPEN T_T24_TRANS
OPEN PO_ACNTS SECONDARY

JOIN PKEY ACCOUNT_NUMBER FIELDS ALL SKEY ACC__NO WITH ALL TO "T24_PO_ACC_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY

DEFINE FIELD ARBUTUS_PO_ACNT_BR_CODE COMPUTED RIGHT(RJUSTIFY(ALLTRIM(ACCOUNT_NUMBER)), 3)



*******************************************
* JOIN STALE AND ACTIVE POs
*******************************************
OPEN T24_STALE_PO_TRANS
OPEN T24_PO_ACC_JOIN SECONDARY

JOIN PRIMARY PKEY PO_NO ARBUTUS_STALE_PO_ACNT_BR_CODE ABS(AMOUNT_LCY) FIELDS ALL SKEY PO_NO ARBUTUS_PO_ACNT_BR_CODE ABS(AMOUNT_LCY) WITH "ACTIVE POs" AS "ACTIVE PO" ACCOUNT_NUMBER ARBUTUS_PO_ACNT_BR_CODE PO_NO AMOUNT_LCY BOOKING_DATE AS 'DATE_OF_ISS' VALUE_DATE DATE_TIME  TO T24_STALE_ACTIVE_PO_JOIN OPEN PRESORT SECSORT
CLOSE SECONDARY

OPEN T24_STALE_ACTIVE_PO_JOIN

EXTRACT FIELDS ACC_NO BRANCH BOOKING_DATE AS 'TRFS DATE' DATE_OF_ISS PO_NO NARRATIVE_1 AMOUNT_LCY TRANS_REFERENCE INPUTTER AUTHORISER TO T24_STALE_ORDER_TRANS_EXTRACT OPEN

EXPORT FIELDS ALL DELIMITED SEPARATOR "|" QUALIFIER '"' TO "%v_processing_path%\T24_STALE_ORDER_TRANS_EXTRACT_APPEND.txt"




*********************************************
* IMPORT PREV DAY PO RECON
*********************************************
SET SAFETY OFF
DIR "%v_folder_path%\*.xlsx" TO RECON_DIR

OPEN RECON_DIR
v_file_name = ALLTRIM(file_name)


DISPLAY EXCEL "%v_file_name%" TO v_sheet_name
IMPORT OPENEXCEL TO T_SO_PREV_RECON FILE "%v_file_name%" TABLE "%v_sheet_name%" SERVER "LOCAL" FLAT "T_RECON.FIL"


EXTRACT FIELDS F1 AS 'TRFS_DATE' F2 AS 'AGEING' F3 AS 'DATE_OF_ISSUE' F4 AS 'PO_NO' CONSOLIDATED_BANK_GHANA_LIMITED AS 'PAY_DETAILS' F6 AS 'REFERENCE' F7 AS 'AMOUNT' TO T_SO_PREV_RECON_EXTRACT OPEN

EXTRACT FIELDS ALL TO SO_PREV_RECON OPEN IF NOT MATCH(PAY_DETAILS, 'PO ACCOUNT')

DEFINE FIELD ACC_FIELD COMPUTED FORMAT(Pay_Details)
DEFINE FIELD ACC_FIELD_2 COMPUTED

Pay_Details IF FIND( "(9999999999999)", REPLACE(ACC_FIELD, " ", ""))
''

DEFINE FIELD RECNO COMPUTED RECNO()

v_rec = 1

GROUP IF FIND("XXX9999999999999", RECOFFSET(REPLACE(ACC_FIELD, " ", ""), v_rec)) AND NOT FIND("DIFFERENCE", RECOFFSET(Pay_Details, 0))
  v_rec = v_rec - 1
  EXTRACT FIELDS TRFS_DATE DATE_OF_ISSUE PO_NO Pay_Details VALUE(Amount,2) AS 'AMOUNT' REFERENCE '0' RECOFFSET(Pay_Details, v_rec + 1) AS 'Branch_Acc'  TO SO_PREV_RECON_BRANCH_EXTRACT
ELSE
  v_rec = -1
  EXTRACT FIELDS TRFS_DATE DATE_OF_ISSUE PO_NO Pay_Details VALUE(Amount,2) AS 'AMOUNT' REFERENCE '1' RECOFFSET(Pay_Details, v_rec) AS 'Branch_Acc'  TO SO_PREV_RECON_BRANCH_EXTRACT
END

SET SAFETY OFF

OPEN SO_PREV_RECON_BRANCH_EXTRACT

DEFINE FIELD ACC COMPUTED NORMALIZE(SPLIT(Branch_Acc, "(", 2))

DEFINE FIELD BRANCH COMPUTED NORMALIZE(SPLIT(Branch_Acc, "(", 1))

DEFINE FIELD TRSF_DATE COMPUTED CTOD(TRFS_DATE, "YYYY-MM-DD")
DEFINE FIELD DATE_OF_ISS COMPUTED CTOD(DATE_OF_ISSUE, "YYYY-MM-DD")

DEFINE FIELD AGEING COMPUTED EDATE - TRSF_DATE

SET FILTER TO PAY_DETAILS = 'BALANCE PER LEDGER    '

EXTRACT FIELDS ACC AMOUNT TO PREV_DAY_BALS

SET FILTER

EXTRACT FIELDS ACC Branch TRSF_DATE DATE_OF_ISS PO_NO Pay_Details AMOUNT REFERENCE TO SO_PREV_RECON_EXTRACT OPEN IF ((((ACC <> '') AND (TRFS_DATE <> 'TRFS DATE '))) ) AND (NOT MATCH(PAY_DETAILS,'BALANCE PER LEDGER  ','BALANCE PER RECONCILIATION     '))

*AND (NOT MATCH(PAY_DETAILS,'BALANCE PER LEDGER','BALANCE PER RECONCILIATION'))

EXPORT FIELDS ALL DELIMITED SEPARATOR "|" QUALIFIER '"' TO "%v_processing_path%\T24_STALE_ORDER_TRANS_EXTRACT_APPEND.txt" APPEND

SUMMARIZE ON ACC AS 'ACC_NO' FIELDS BRANCH SUMMTYPE FIRST AS 'BRANCH' PRESORT TO SO_PREV_DAY_ACC_SUM OPEN

COMM
DELETE FORMAT RECON_DIR OK
DELETE FORMAT T_SO_PREV_RECON OK
DELETE FORMAT SO_PREV_RECON_BRANCH_EXTRACT OK
DELETE FORMAT SO_PREV_RECON OK
END


***********************************************************
*
***********************************************************
SET SAFETY OFF

IMPORT DELIMITED TO T24_STALE_ORDER_TRANS_EXTRACT_APPEND RECORD_LENGTH 310 CRLF FIELDS ACC_NO UTF8 1 16, BRANCH UTF8 17 19, TRFS_DATE DATETIME 36 10 PIC 'MM/DD/YYYY', DATE_OF_ISS DATETIME 46 10 PIC 'MM/DD/YYYY', PO_NO UTF8 56 6, NARRATIVE_1 UTF8 62 126, AMOUNT_LCY PRINT 188 10 2, TRANS_REFERENCE UTF8 198 16, INPUTTER UTF8 214 29, AUTHORISER UTF8 243 18 END "%v_processing_path%\T24_STALE_ORDER_TRANS_EXTRACT_APPEND.txt" 0 124 34


DEFINE FIELD PO_NO1 COMPUTED LFILL(COMPACT(ALLTRIM(PO_NO)), '0', 6)

SORT ON ACC_NO PO_NO 'DESC' TO "T24_STALE_ORDER_TRANS_EXTRACT_APPEND_SORTED" OPEN IF (AMOUNT_LCY <> 0.00) AND (NOT MATCH(NARRATIVE_1,'BALANCE PER LEDGER','BALANCE PER RECONCILIATION'))


SUMMARIZE ON ACC_NO AS 'ACC_NO' PO_NO1 AS 'PO_NO' ABS(AMOUNT_LCY) AS 'AMOUNT_LCY' FIELDS ALL AMOUNT_LCY SUMMTYPE SUM AS 'SUM_AMOUNT_LCY' PRESORT TO "T24_STALE_ORDER_TRANS_EXTRACT_APPEND_SORTED_SUMM" OPEN

EXTRACT FIELDS TRFS_DATE DATE_OF_ISS PO_NO NARRATIVE_1 SUM_AMOUNT_LCY TRANS_REFERENCE INPUTTER AUTHORISER ACC_NO BRANCH TO T24_STALE_ORDER_TRANS_SUMM_SINGLE IF COUNT = 1

EXTRACT FIELDS TRFS_DATE DATE_OF_ISS PO_NO NARRATIVE_1 SUM_AMOUNT_LCY TRANS_REFERENCE INPUTTER AUTHORISER ACC_NO BRANCH TO T24_STALE_ORDER_TRANS_SUMM_MULTIPLE IF (COUNT > 1) AND (SUM_AMOUNT_LCY <> 0.00)

OPEN T24_STALE_ORDER_TRANS_EXTRACT_APPEND_SORTED
OPEN T24_STALE_ORDER_TRANS_SUMM_MULTIPLE SECONDARY

JOIN PRIMARY PKEY ACC_NO PO_NO1 FIELDS ALL SKEY ACC_NO PO_NO WITH ALL TO "T24_STALE_ORDER_TRANS_SUMM_MULTIPLE_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY

EXTRACT FIELDS ACC_NO BRANCH TRFS_DATE DATE_OF_ISS PO_NO1 NARRATIVE_1 AMOUNT_LCY TRANS_REFERENCE INPUTTER AUTHORISER TO T24_STALE_ORDER_TRANS_SUMM_MULTIPLE_JOIN_EXTRACT IF NOT ISBLANK(ACC_NO2)

APPEND T24_STALE_ORDER_TRANS_SUMM_SINGLE T24_STALE_ORDER_TRANS_SUMM_MULTIPLE_JOIN_EXTRACT TO T24_STALE_ORDER_SINGLE_MULTIPLE_APPEND



***********************************************************
* JOIN TO EXTRACT BALANCES
***********************************************************
OPEN T24_STALE_ORDER_SINGLE_MULTIPLE_APPEND
OPEN T24_SO_ACC_BALS_EXTRACT SECONDARY

JOIN PRIMARY PKEY ACC_NO FIELDS ALL SKEY ACC_NO WITH BK_BALANCE ACC_NO TO "SO_TRANS_APPEND_SUMM_ACC_BALS_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY


***********************************************************
* JOIN TO PREV DAY EXTRACT BALANCES
***********************************************************
*OPEN PREV_DAY_BALS
*EXTRACT FIELDS ACC BRANCH Pay_Details AMOUNT AS 'PREV_DAY_BAL' TO SO_PREV_RECON_BALS_EXTRACT OPEN IF ALLTRIM(Pay_Details) = 'BALANCE PER LEDGER'

SET SAFETY OFF

OPEN SO_TRANS_APPEND_SUMM_ACC_BALS_JOIN
OPEN PREV_DAY_BALS SECONDARY

JOIN PRIMARY PKEY ACC_NO FIELDS ALL SKEY ACC WITH AMOUNT AS "PREV_DAY_BAL" TO SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_JOIN PRESORT SECSORT OPEN
CLOSE SECONDARY

DEFINE FIELD BK_BALANCE_2 COMPUTED

BK_BALANCE IF BK_BALANCE <> 0.00
PREV_DAY_BAL


***********************************************************
* JOIN TO EXTRACT INPUTTER AND AUTHORIZERS
***********************************************************
OPEN SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_JOIN
OPEN T_CBG_BANK_TRANS SECONDARY

JOIN PRIMARY PKEY TRANS_REFERENCE FIELDS ALL SKEY TRANS_REFERENCE WITH INPUTTER AUTHORISER TO "SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_BAL_BANK_TRANS_JOIN" OPEN PRESORT SECSORT
CLOSE SECONDARY

SUMMARIZE ON ACC_NO AS 'ACC_NO' FIELDS SUM_AMOUNT_LCY SUMMTYPE SUM AS 'SUM_AMOUNT_LCY' BK_BALANCE_2 SUMMTYPE FIRST AS 'FIRST_BK_BALANCE' PRESORT TO "CHECK" OPEN

DEFINE FIELD C_BAL_VARIANCE COMPUTED FIRST_BK_BALANCE - SUM_AMOUNT_LCY





****************************************************************
* FINAL SO Report
****************************************************************
SET SAFETY OFF
CLOSE PRIMARY ALL
DELETE "%v_processing_path%\so_recon_branch_append.txt" OK


OPEN SO_PREV_DAY_ACC_SUM

COUNT
v_pointer = 1

DO .SO_REPORT WHILE v_pointer <= COUNT1

IMPORT DELIMITED TO so_recon_branch_append RECORD_LENGTH 348 CRLF FIELDS TRSF_DATE UTF8 1 10, BRANCH UTF8 11 19 AS "Field_2", ACC UTF8 30 16 AS "Field_3", DATE_OF_ISSUE UTF8 46 13 AS "Field_4", PO_NO UTF8 59 6 AS "Field_5", PAY_DETAILS UTF8 65 126 AS "Field_6", AMOUNT UTF8 191 37 AS "Field_7", REFERENCE UTF8 228 16 AS "Field_8", INPUTTER UTF8 244 35 AS "Field_9", AUTHOURIZER UTF8 279 20 AS "Field_10" END "%v_processing_path%\so_recon_branch_append.txt" 0 124 34

DEFINE FIELD AGEING COMPUTED DEC(EDATE - CTOD(TRSF_DATE, "YYYY-MM-DD"), 0)
DEFINE FIELD RECNO COMPUTED RECNO()

COUNT

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" IF RECNO = 1

EXPORT FIELDS BLANKS(1) AS BLANKS(1) BLANKS(1) AS BLANKS(1) BLANKS(1) AS BLANKS(1) BLANKS(1) AS BLANKS(1) BLANKS(1) AS BLANKS(1) "CONSOLIDATED BANK GHANA LIMITED" AS BLANKS(1) BLANKS(1) AS BLANKS(1) BLANKS(1) AS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" IF RECNO = 1


EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1)  "PAYMENT ORDER RECONCILIATION STATEMENT AS AT %v_edate_rpt_date%" BLANKS(1) BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) DATE(EDATE, "DD-MMM-YY") BLANKS(1) BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND IF RECNO = 1


EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND IF RECNO = 1

EXPORT FIELDS TRSF_DATE BRANCH ACC DATE_OF_ISSUE PO_NO PAY_DETAILS AMOUNT REFERENCE INPUTTER AUTHOURIZER AGEING  DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND

SET FILTER PAY_DETAILS = 'DIFFERENCE'

TOTAL FIELDS VALUE(AMOUNT,2) AS 'AMOUNT'
v_bal_diff_fin = TOTAL1

SET FILTER RECNO = COUNT1


EXPORT FIELDS BLANKS(1) BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND

EXPORT FIELDS BLANKS(1)  DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) "BALANCE PER RECONCILIATION" v_bal_diff_fin BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append_final.txt" APPEND

*IMPORT DELIMITED TO so_recon_branch_append RECORD_LENGTH 348 CRLF FIELDS TRSF_DATE UTF8 1 10, BRANCH UTF8 11 19 , ACC UTF8 30 16 AS "Field_3", DATE_OF_ISSUE UTF8 46 13 AS "Field_4", PO_NO UTF8 59 6 AS "Field_5", PAY_DETAILS UTF8 65 126 AS "Field_6", AMOUNT UTF8 191 37 AS "Field_7", REFERENCE UTF8 228 16 AS "Field_8", INPUTTER UTF8 244 35 AS "Field_9", AUTHOURIZER UTF8 279 20 AS "Field_10" END "%v_processing_path%\so_recon_branch_append_final.txt" 0 124 34



IMPORT DELIMITED TO so_recon_branch_append RECORD_LENGTH 338 CRLF SKIP 3 FIELDS TRSF_DATE UTF8 1 10, BRANCH UTF8 11 19, ACC UTF8 30 16, DATE_OF_ISSUE UTF8 46 13, PO_NO UTF8 59 6, PAY_DETAILS UTF8 65 126, AMOUNT UTF8 191 26, REFERENCE UTF8 217 16, INPUTTER UTF8 233 33, AUTHOURIZER UTF8 266 18, AGEING UTF8 284 5 END "%v_processing_path%\so_recon_branch_append_final.txt" 0 124 34

DEFINE FIELD AGEING_2 COMPUTED

AGEING IF VALUE(AGEING,0) < 40000
''


EXTRACT FIELDS TRSF_DATE AS "F1" AGEING_2 AS "F2" DATE_OF_ISSUE AS "F3" PO_NO AS "F4" PAY_DETAILS AS "CONSOLIDATED_BANK_GHANA_LIMITED" REFERENCE AS "F6" AMOUNT AS "F7" INPUTTER  AUTHOURIZER TO FINAL_RECON_RESULT OPEN

EXPORT FIELDS ALL EXCEL QUALIFIER '""' TO "%v_results_path%\STALE_POs_RECON_%v_to%" TABLE "FINAL_RECON_RESULT"

RETURN





**************************************************************************
*  Summarize PO_NO and export to txt
**************************************************************************
PROCEDURE SO_REPORT

SET SAFETY OFF

DELETE FORMAT SO_RECON_BRANCH_EXTRACT_SUM_BAL OK
DELETE FORMAT SO_RECON_BRANCH_EXTRACT_SUM OK
DELETE v_bal_per_recon OK
DELETE v_bal_per_bank OK
DELETE v_bal_diff OK

OPEN SO_PREV_DAY_ACC_SUM

LOCATE RECORD v_pointer
v_acc_no = ACC_NO
v_acc_branch_r = ALLTRIM(BRANCH) + "(" + ALLTRIM(ACC_NO) + ")"


OPEN SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_BAL_BANK_TRANS_JOIN


DEFINE FIELD C_TRFS_DATE COMPUTED DATE(TRFS_DATE, "YYYY-MM-DD")
DEFINE FIELD C_ISS_DATE COMPUTED DATE(DATE_OF_ISS, "YYYY-MM-DD")

SORT ON ACC_NO TRFS_DATE TO SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_BAL_BANK_TRANS_JOIN_SORTED OPEN


DEFINE FIELD RECNO COMPUTED RECNO()

DEFINE FIELD ACC_BRANCH COMPUTED ALLTRIM(BRANCH) + "(" + ALLTRIM(ACC_NO) + ")"

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) "%v_acc_branch_r%" BLANKS(1) BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS 'TRSF_DATE' 'BRANCH' 'ACC' 'DATE_OF_ISSUE' 'PO #' 'PAY DETAILS' 'AMOUNT' 'REFERENCE' 'INPUTTER' 'AUTHOURIZER' DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS C_TRFS_DATE Branch ACC_NO C_ISS_DATE PO_NO NARRATIVE_1 SUM_AMOUNT_LCY TRANS_REFERENCE INPUTTER2 AUTHORISER2  DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF ACC_NO = '%v_acc_no%' AND SUM_AMOUNT_LCY <> 0.00


TOTAL FIELDS SUM_AMOUNT_LCY IF ACC_NO = '%v_acc_no%'
v_bal_per_recon = TOTAL1

SET FILTER ACC_NO = ALLTRIM('%v_acc_no%') AND BK_BALANCE_2 <> 0.00
SUMMARIZE ON ACC_NO FIELDS BK_BALANCE_2 SUMMTYPE FIRST TO RECON_BAL OPEN

*LOCATE ACC_NO = ALLTRIM('%v_acc_no%') AND BK_BALANCE <> 0.00
v_bal_per_bank = BK_BALANCE_2

v_bal_diff = v_bal_per_recon - v_bal_per_bank
OPEN SO_TRANS_APPEND_SUMM_ACC_BALS_PREV_BAL_BANK_TRANS_JOIN
DEFINE FIELD RECNO COMPUTED RECNO()


EXPORT FIELDS BLANKS(1)  DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) 'BALANCE PER RECONCILIATION' %v_bal_per_recon% BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) 'BALANCE PER LEDGER' %v_bal_per_bank% BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) BLANKS(1) 'DIFFERENCE' '%v_bal_diff%' BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1)  DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

EXPORT FIELDS BLANKS(1) DELIMITED SEPARATOR '|' QUALIFIER '"' TO "%v_processing_path%\so_recon_branch_append.txt" APPEND IF RECNO = 1

DELETE v_bal_per_recon OK
DELETE v_bal_per_bank OK
DELETE v_bal_diff OK

v_pointer = v_pointer + 1

RETURN
